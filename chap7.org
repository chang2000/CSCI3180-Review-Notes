* Chap7 Expressions and Assignemnt Statements
* Main Point: Evaluation
  Some issue:
  > Type mismatched

  > corcesion

  > short-circuit evaluation

* 7.2 Arithmetic Expressions
** operators
   unary, binary(usually *in-fix*, but in Perl, some are prefix), ternary
** operands
** parenthess
** function calls
   
** Operators Evaluation Order
   > *Precedence*
   ****************
   **
   unary
   */%
   binary +-
   ****************
   > *Associativity*
   > *conditional expressions*
   

** Operand Evaluation Order
   1.Variables
   2.constants
   3.parenthese
   4.funciton calls(side effect)
   ***************FINAL**************
   ALSO TWO APPRACH: *lazy* and *eager*
   My words: often the lazy on is used
#+BEGIN_SRC C
bar (int x, int y){
if x != 0{
        afsdfasdfasdfasdf y
    }else{
    return 0;
    }
}
bar(d,c/d)// thus, it is legal
#+END_SRC
* 7.3 Overloaded Operators
  Multiple use of operators(+ for add integer and catenation of string)
  User-defined can be harmfulllllll to readability
* 7.4 Type Conversions
